<?php

namespace App\Repositories\ReactionReplyRepo;

use App\Models\ReactionReply;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Collection;
use TimWassenburg\RepositoryGenerator\Repository\BaseRepository;

/**
 * Class ReactionReplyRepo.
 */
class ReactionReplyRepo extends BaseRepository implements ReactionReplyRepoInterface
{
    /**
     * UserRepository constructor.
     */
    public function __construct(ReactionReply $model)
    {
        parent::__construct($model);
    }

    public function paginate($limit = null, array $with = [], $columns = ['*'])
    {
        return parent::paginate($limit, $with, $columns); // TODO: Change the autogenerated stub
    }

    public function all(array $with = [], array $paramsSelect = ['*'], array $condition = []): Collection
    {
        return parent::all($with, $paramsSelect, $condition); // TODO: Change the autogenerated stub
    }

    public function create(array $attributes): Model
    {
        return parent::create($attributes); // TODO: Change the autogenerated stub
    }

    public function delete(string $id)
    {
        return parent::delete($id); // TODO: Change the autogenerated stub
    }

    public function update(string $id, array $attributes): bool
    {
        return parent::update($id, $attributes); // TODO: Change the autogenerated stub
    }

    public function find(string $id, array $with = [], array $params = []): ?Model
    {
        return parent::find($id, $with, $params); // TODO: Change the autogenerated stub
    }

    public function findWithTrash(string $id): ?Model
    {
        return parent::findWithTrash($id); // TODO: Change the autogenerated stub
    }

    public function findByField(array $columns, string $keyword, $limit = null, array $with = [])
    {
        return parent::findByField($columns, $keyword, $limit, $with); // TODO: Change the autogenerated stub
    }

}
