<?php

namespace App\Http\Requests;

use Illuminate\Contracts\Validation\Validator;
use Illuminate\Http\Exceptions\HttpResponseException;
use Illuminate\Foundation\Http\FormRequest;

class MediaRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, mixed>
     */
    public function rules()
    {
        return [
            'mediaName' => ['required','string','max:10'],
            'type' => ['required'],
            'privacy' => ['required'],
            'medias' => ['required','file', function ($attribute, $value, $fail) {
                $allowedTypes = ['jpeg','jpg','tiff','tif','gif','.bmp', 'png', 'mp4'];
                // Kiểm tra kiểu file
                $fileType = $value->getClientOriginalExtension();
                if (!in_array($fileType, $allowedTypes)) {
                    $fail("Only JPEG,JPG,PNG,TIFF,GIF,BMP, and MP4 file types are allowed.");
                }
                // Kiểm tra dung lượng tối đa dựa trên kiểu file
                $maxFileSize = ($fileType == 'mp4') ? 2*1024*1024*1024 : 20*1024*1024; // Dung lượng tối đa: 50MB cho mp4, 200KB cho jpeg và png

                if ($value->getSize() > $maxFileSize) {
                    $fail("The file size for {$fileType} must not exceed {$maxFileSize} bytes.");
                }
            },]
        ];
    }

//    public function messages()
//    {
//        return parent::messages(); // TODO: Change the autogenerated stub
//    }
    protected function failedValidation(Validator $validator)
    {
        throw new HttpResponseException(response()->json(['error' => $validator->errors()], 422));
    }


}
